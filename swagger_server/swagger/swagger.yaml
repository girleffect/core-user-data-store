---
swagger: "2.0"
info:
  description: ""
  version: ""
  title: "User Data API"
host: "localhost:8080"
basePath: "/api/v1"
schemes:
- "https"
- "http"
security:
- APIKeyHeader: []
paths:
  /adminnotes:
    get:
      tags:
      - "user_data"
      operationId: "adminnote_list"
      produces:
      - "application/json"
      parameters:
      - name: "offset"
        in: "query"
        description: "An optional query parameter specifying the offset in the result\
          \ set to start from."
        required: false
        type: "integer"
        default: 0
        minimum: 0
      - name: "limit"
        in: "query"
        description: "An optional query parameter to limit the number of results returned."
        required: false
        type: "integer"
        default: 20
        maximum: 100
        minimum: 1
      - name: "user_id"
        in: "query"
        description: "An optional query parameter to filter by user_id"
        required: false
        type: "string"
        format: "uuid"
      - name: "creator_id"
        in: "query"
        description: "An optional query parameter to filter by creator (a user_id)"
        required: false
        type: "string"
        format: "uuid"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/admin_note"
        403:
          description: "Forbidden"
      x-swagger-router-controller: "swagger_server.controllers.user_data_controller"
    post:
      tags:
      - "user_data"
      operationId: "adminnote_create"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "data"
        required: false
        schema:
          $ref: "#/definitions/admin_note_create"
      responses:
        201:
          description: ""
          schema:
            $ref: "#/definitions/admin_note"
        403:
          description: "Forbidden"
      x-swagger-router-controller: "swagger_server.controllers.user_data_controller"
  /adminnotes/{admin_note_id}:
    get:
      tags:
      - "user_data"
      operationId: "adminnote_read"
      produces:
      - "application/json"
      parameters:
      - name: "admin_note_id"
        in: "path"
        description: "A unique integer value identifying the admin note."
        required: true
        type: "integer"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/admin_note"
        403:
          description: "Forbidden"
      x-swagger-router-controller: "swagger_server.controllers.user_data_controller"
    put:
      tags:
      - "user_data"
      operationId: "adminnote_update"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "admin_note_id"
        in: "path"
        description: "A unique integer value identifying the admin note."
        required: true
        type: "integer"
      - in: "body"
        name: "data"
        required: false
        schema:
          $ref: "#/definitions/admin_note_update"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/admin_note"
        403:
          description: "Forbidden"
      x-swagger-router-controller: "swagger_server.controllers.user_data_controller"
    delete:
      tags:
      - "user_data"
      operationId: "adminnote_delete"
      parameters:
      - name: "admin_note_id"
        in: "path"
        description: "A unique integer value identifying the admin note."
        required: true
        type: "integer"
      responses:
        204:
          description: "Deleted"
        403:
          description: "Forbidden"
      x-swagger-router-controller: "swagger_server.controllers.user_data_controller"
  /sitedataschemas:
    get:
      tags:
      - "user_data"
      operationId: "sitedataschema_list"
      produces:
      - "application/json"
      parameters:
      - name: "offset"
        in: "query"
        description: "An optional query parameter specifying the offset in the result\
          \ set to start from."
        required: false
        type: "integer"
        default: 0
        minimum: 0
      - name: "limit"
        in: "query"
        description: "An optional query parameter to limit the number of results returned."
        required: false
        type: "integer"
        default: 20
        maximum: 100
        minimum: 1
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/site_data_schema"
      x-swagger-router-controller: "swagger_server.controllers.user_data_controller"
    post:
      tags:
      - "user_data"
      operationId: "sitedataschema_create"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "data"
        required: false
        schema:
          $ref: "#/definitions/site_data_schema_create"
      responses:
        201:
          description: ""
          schema:
            $ref: "#/definitions/site_data_schema"
      x-swagger-router-controller: "swagger_server.controllers.user_data_controller"
  /sitedataschemas/{site_id}:
    get:
      tags:
      - "user_data"
      operationId: "sitedataschema_read"
      produces:
      - "application/json"
      parameters:
      - name: "site_id"
        in: "path"
        description: "A unique integer value identifying the site."
        required: true
        type: "integer"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/site_data_schema"
      x-swagger-router-controller: "swagger_server.controllers.user_data_controller"
    put:
      tags:
      - "user_data"
      operationId: "sitedataschema_update"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "site_id"
        in: "path"
        description: "A unique integer value identifying the site."
        required: true
        type: "integer"
      - in: "body"
        name: "data"
        required: false
        schema:
          $ref: "#/definitions/site_data_schema_update"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/site_data_schema"
      x-swagger-router-controller: "swagger_server.controllers.user_data_controller"
    delete:
      tags:
      - "user_data"
      operationId: "sitedataschema_delete"
      parameters:
      - name: "site_id"
        in: "path"
        description: "A unique integer value identifying the site."
        required: true
        type: "integer"
      responses:
        204:
          description: ""
      x-swagger-router-controller: "swagger_server.controllers.user_data_controller"
  /usersitedata:
    get:
      tags:
      - "user_data"
      operationId: "usersitedata_list"
      produces:
      - "application/json"
      parameters:
      - name: "offset"
        in: "query"
        description: "An optional query parameter specifying the offset in the result\
          \ set to start from."
        required: false
        type: "integer"
        default: 0
        minimum: 0
      - name: "limit"
        in: "query"
        description: "An optional query parameter to limit the number of results returned."
        required: false
        type: "integer"
        default: 20
        maximum: 100
        minimum: 1
      - name: "user_id"
        in: "query"
        description: "An optional query parameter to filter by user_id"
        required: false
        type: "string"
        format: "uuid"
      - name: "site_id"
        in: "query"
        description: "An optional query parameter to filter by site_id"
        required: false
        type: "integer"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/user_site_data"
      x-swagger-router-controller: "swagger_server.controllers.user_data_controller"
    post:
      tags:
      - "user_data"
      operationId: "usersitedata_create"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "data"
        required: false
        schema:
          $ref: "#/definitions/user_site_data_create"
      responses:
        201:
          description: ""
          schema:
            $ref: "#/definitions/user_site_data"
      x-swagger-router-controller: "swagger_server.controllers.user_data_controller"
  /usersitedata/{user_id}/{site_id}:
    get:
      tags:
      - "user_data"
      operationId: "usersitedata_read"
      produces:
      - "application/json"
      parameters:
      - name: "user_id"
        in: "path"
        description: "A UUID value identifying the user."
        required: true
        type: "string"
        format: "uuid"
      - name: "site_id"
        in: "path"
        description: "A unique integer value identifying the site."
        required: true
        type: "integer"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/user_site_data"
      x-swagger-router-controller: "swagger_server.controllers.user_data_controller"
    put:
      tags:
      - "user_data"
      operationId: "usersitedata_update"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "user_id"
        in: "path"
        description: "A UUID value identifying the user."
        required: true
        type: "string"
        format: "uuid"
      - name: "site_id"
        in: "path"
        description: "A unique integer value identifying the site."
        required: true
        type: "integer"
      - in: "body"
        name: "data"
        required: false
        schema:
          $ref: "#/definitions/user_site_data_update"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/user_site_data"
      x-swagger-router-controller: "swagger_server.controllers.user_data_controller"
    delete:
      tags:
      - "user_data"
      operationId: "usersitedata_delete"
      parameters:
      - name: "user_id"
        in: "path"
        description: "A UUID value identifying the user."
        required: true
        type: "string"
        format: "uuid"
      - name: "site_id"
        in: "path"
        description: "A unique integer value identifying the site."
        required: true
        type: "integer"
      responses:
        204:
          description: ""
      x-swagger-router-controller: "swagger_server.controllers.user_data_controller"
securityDefinitions:
  APIKeyHeader:
    type: "apiKey"
    name: "X-API-Key"
    in: "header"
definitions:
  admin_note:
    type: "object"
    required:
    - "created_at"
    - "creator_id"
    - "id"
    - "note"
    - "updated_at"
    - "user_id"
    properties:
      id:
        type: "integer"
        readOnly: true
      user_id:
        type: "string"
        format: "uuid"
      creator_id:
        type: "string"
        format: "uuid"
      note:
        type: "string"
      created_at:
        type: "string"
        format: "date-time"
        readOnly: true
      updated_at:
        type: "string"
        format: "date-time"
        readOnly: true
    example:
      note: "note"
      updated_at: "2000-01-23T04:56:07.000+00:00"
      user_id: "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
      creator_id: "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
      created_at: "2000-01-23T04:56:07.000+00:00"
      id: 0
  admin_note_create:
    type: "object"
    required:
    - "creator_id"
    - "note"
    - "user_id"
    properties:
      user_id:
        type: "string"
        format: "uuid"
      creator_id:
        type: "string"
        format: "uuid"
      note:
        type: "string"
  admin_note_update:
    type: "object"
    properties:
      note:
        type: "string"
  site_data_schema:
    type: "object"
    required:
    - "created_at"
    - "schema"
    - "site_id"
    - "updated_at"
    properties:
      site_id:
        type: "integer"
      schema:
        type: "object"
        properties: {}
      created_at:
        type: "string"
        format: "date-time"
        readOnly: true
      updated_at:
        type: "string"
        format: "date-time"
        readOnly: true
    example:
      schema: "{}"
      updated_at: "2000-01-23T04:56:07.000+00:00"
      site_id: 0
      created_at: "2000-01-23T04:56:07.000+00:00"
  site_data_schema_create:
    type: "object"
    required:
    - "schema"
    - "site_id"
    properties:
      site_id:
        type: "integer"
      schema:
        type: "object"
        properties: {}
  site_data_schema_update:
    type: "object"
    properties:
      schema:
        type: "object"
        properties: {}
  user_site_data:
    type: "object"
    required:
    - "blocked"
    - "consented_at"
    - "created_at"
    - "data"
    - "site_id"
    - "updated_at"
    - "user_id"
    properties:
      user_id:
        type: "string"
        format: "uuid"
      site_id:
        type: "integer"
      data:
        type: "object"
        properties: {}
      consented_at:
        type: "string"
        format: "date"
      blocked:
        type: "boolean"
      created_at:
        type: "string"
        format: "date-time"
        readOnly: true
      updated_at:
        type: "string"
        format: "date-time"
        readOnly: true
    example:
      data: "{}"
      consented_at: "2000-01-23"
      blocked: true
      updated_at: "2000-01-23T04:56:07.000+00:00"
      user_id: "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
      site_id: 0
      created_at: "2000-01-23T04:56:07.000+00:00"
  user_site_data_create:
    type: "object"
    required:
    - "data"
    - "site_id"
    - "user_id"
    properties:
      user_id:
        type: "string"
        format: "uuid"
      site_id:
        type: "integer"
      data:
        type: "object"
        properties: {}
      consented_at:
        type: "string"
        format: "date"
      blocked:
        type: "boolean"
  user_site_data_update:
    type: "object"
    properties:
      data:
        type: "object"
        properties: {}
      consented_at:
        type: "string"
        format: "date"
      blocked:
        type: "boolean"
parameters:
  optional_limit:
    name: "limit"
    in: "query"
    description: "An optional query parameter to limit the number of results returned."
    required: false
    type: "integer"
    default: 20
    maximum: 100
    minimum: 1
  optional_offset:
    name: "offset"
    in: "query"
    description: "An optional query parameter specifying the offset in the result\
      \ set to start from."
    required: false
    type: "integer"
    default: 0
    minimum: 0
  optional_site_filter:
    name: "site_id"
    in: "query"
    description: "An optional query parameter to filter by site_id"
    required: false
    type: "integer"
  optional_user_filter:
    name: "user_id"
    in: "query"
    description: "An optional query parameter to filter by user_id"
    required: false
    type: "string"
    format: "uuid"
  admin_note_id:
    name: "admin_note_id"
    in: "path"
    description: "A unique integer value identifying the admin note."
    required: true
    type: "integer"
  site_id:
    name: "site_id"
    in: "path"
    description: "A unique integer value identifying the site."
    required: true
    type: "integer"
  user_id:
    name: "user_id"
    in: "path"
    description: "A UUID value identifying the user."
    required: true
    type: "string"
    format: "uuid"
