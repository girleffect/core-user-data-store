# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class SiteDataSchemaCreate(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, site_id: int=None, schema: object=None):  # noqa: E501
        """SiteDataSchemaCreate - a model defined in Swagger

        :param site_id: The site_id of this SiteDataSchemaCreate.  # noqa: E501
        :type site_id: int
        :param schema: The schema of this SiteDataSchemaCreate.  # noqa: E501
        :type schema: object
        """
        self.swagger_types = {
            'site_id': int,
            'schema': object
        }

        self.attribute_map = {
            'site_id': 'site_id',
            'schema': 'schema'
        }

        self._site_id = site_id
        self._schema = schema

    @classmethod
    def from_dict(cls, dikt) -> 'SiteDataSchemaCreate':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The site_data_schema_create of this SiteDataSchemaCreate.  # noqa: E501
        :rtype: SiteDataSchemaCreate
        """
        return util.deserialize_model(dikt, cls)

    @property
    def site_id(self) -> int:
        """Gets the site_id of this SiteDataSchemaCreate.


        :return: The site_id of this SiteDataSchemaCreate.
        :rtype: int
        """
        return self._site_id

    @site_id.setter
    def site_id(self, site_id: int):
        """Sets the site_id of this SiteDataSchemaCreate.


        :param site_id: The site_id of this SiteDataSchemaCreate.
        :type site_id: int
        """
        if site_id is None:
            raise ValueError("Invalid value for `site_id`, must not be `None`")  # noqa: E501

        self._site_id = site_id

    @property
    def schema(self) -> object:
        """Gets the schema of this SiteDataSchemaCreate.


        :return: The schema of this SiteDataSchemaCreate.
        :rtype: object
        """
        return self._schema

    @schema.setter
    def schema(self, schema: object):
        """Sets the schema of this SiteDataSchemaCreate.


        :param schema: The schema of this SiteDataSchemaCreate.
        :type schema: object
        """
        if schema is None:
            raise ValueError("Invalid value for `schema`, must not be `None`")  # noqa: E501

        self._schema = schema
