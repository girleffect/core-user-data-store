# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class DeletedUserSiteCreate(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, deleted_user_id: str=None, site_id: int=None, deletion_requested_at: datetime=None, deletion_requested_via: str=None, deletion_confirmed_at: datetime=None, deletion_confirmed_via: str=None):  # noqa: E501
        """DeletedUserSiteCreate - a model defined in Swagger

        :param deleted_user_id: The deleted_user_id of this DeletedUserSiteCreate.  # noqa: E501
        :type deleted_user_id: str
        :param site_id: The site_id of this DeletedUserSiteCreate.  # noqa: E501
        :type site_id: int
        :param deletion_requested_at: The deletion_requested_at of this DeletedUserSiteCreate.  # noqa: E501
        :type deletion_requested_at: datetime
        :param deletion_requested_via: The deletion_requested_via of this DeletedUserSiteCreate.  # noqa: E501
        :type deletion_requested_via: str
        :param deletion_confirmed_at: The deletion_confirmed_at of this DeletedUserSiteCreate.  # noqa: E501
        :type deletion_confirmed_at: datetime
        :param deletion_confirmed_via: The deletion_confirmed_via of this DeletedUserSiteCreate.  # noqa: E501
        :type deletion_confirmed_via: str
        """
        self.swagger_types = {
            'deleted_user_id': str,
            'site_id': int,
            'deletion_requested_at': datetime,
            'deletion_requested_via': str,
            'deletion_confirmed_at': datetime,
            'deletion_confirmed_via': str
        }

        self.attribute_map = {
            'deleted_user_id': 'deleted_user_id',
            'site_id': 'site_id',
            'deletion_requested_at': 'deletion_requested_at',
            'deletion_requested_via': 'deletion_requested_via',
            'deletion_confirmed_at': 'deletion_confirmed_at',
            'deletion_confirmed_via': 'deletion_confirmed_via'
        }

        self._deleted_user_id = deleted_user_id
        self._site_id = site_id
        self._deletion_requested_at = deletion_requested_at
        self._deletion_requested_via = deletion_requested_via
        self._deletion_confirmed_at = deletion_confirmed_at
        self._deletion_confirmed_via = deletion_confirmed_via

    @classmethod
    def from_dict(cls, dikt) -> 'DeletedUserSiteCreate':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The deleted_user_site_create of this DeletedUserSiteCreate.  # noqa: E501
        :rtype: DeletedUserSiteCreate
        """
        return util.deserialize_model(dikt, cls)

    @property
    def deleted_user_id(self) -> str:
        """Gets the deleted_user_id of this DeletedUserSiteCreate.


        :return: The deleted_user_id of this DeletedUserSiteCreate.
        :rtype: str
        """
        return self._deleted_user_id

    @deleted_user_id.setter
    def deleted_user_id(self, deleted_user_id: str):
        """Sets the deleted_user_id of this DeletedUserSiteCreate.


        :param deleted_user_id: The deleted_user_id of this DeletedUserSiteCreate.
        :type deleted_user_id: str
        """
        if deleted_user_id is None:
            raise ValueError("Invalid value for `deleted_user_id`, must not be `None`")  # noqa: E501

        self._deleted_user_id = deleted_user_id

    @property
    def site_id(self) -> int:
        """Gets the site_id of this DeletedUserSiteCreate.


        :return: The site_id of this DeletedUserSiteCreate.
        :rtype: int
        """
        return self._site_id

    @site_id.setter
    def site_id(self, site_id: int):
        """Sets the site_id of this DeletedUserSiteCreate.


        :param site_id: The site_id of this DeletedUserSiteCreate.
        :type site_id: int
        """
        if site_id is None:
            raise ValueError("Invalid value for `site_id`, must not be `None`")  # noqa: E501

        self._site_id = site_id

    @property
    def deletion_requested_at(self) -> datetime:
        """Gets the deletion_requested_at of this DeletedUserSiteCreate.


        :return: The deletion_requested_at of this DeletedUserSiteCreate.
        :rtype: datetime
        """
        return self._deletion_requested_at

    @deletion_requested_at.setter
    def deletion_requested_at(self, deletion_requested_at: datetime):
        """Sets the deletion_requested_at of this DeletedUserSiteCreate.


        :param deletion_requested_at: The deletion_requested_at of this DeletedUserSiteCreate.
        :type deletion_requested_at: datetime
        """

        self._deletion_requested_at = deletion_requested_at

    @property
    def deletion_requested_via(self) -> str:
        """Gets the deletion_requested_via of this DeletedUserSiteCreate.


        :return: The deletion_requested_via of this DeletedUserSiteCreate.
        :rtype: str
        """
        return self._deletion_requested_via

    @deletion_requested_via.setter
    def deletion_requested_via(self, deletion_requested_via: str):
        """Sets the deletion_requested_via of this DeletedUserSiteCreate.


        :param deletion_requested_via: The deletion_requested_via of this DeletedUserSiteCreate.
        :type deletion_requested_via: str
        """

        self._deletion_requested_via = deletion_requested_via

    @property
    def deletion_confirmed_at(self) -> datetime:
        """Gets the deletion_confirmed_at of this DeletedUserSiteCreate.


        :return: The deletion_confirmed_at of this DeletedUserSiteCreate.
        :rtype: datetime
        """
        return self._deletion_confirmed_at

    @deletion_confirmed_at.setter
    def deletion_confirmed_at(self, deletion_confirmed_at: datetime):
        """Sets the deletion_confirmed_at of this DeletedUserSiteCreate.


        :param deletion_confirmed_at: The deletion_confirmed_at of this DeletedUserSiteCreate.
        :type deletion_confirmed_at: datetime
        """

        self._deletion_confirmed_at = deletion_confirmed_at

    @property
    def deletion_confirmed_via(self) -> str:
        """Gets the deletion_confirmed_via of this DeletedUserSiteCreate.


        :return: The deletion_confirmed_via of this DeletedUserSiteCreate.
        :rtype: str
        """
        return self._deletion_confirmed_via

    @deletion_confirmed_via.setter
    def deletion_confirmed_via(self, deletion_confirmed_via: str):
        """Sets the deletion_confirmed_via of this DeletedUserSiteCreate.


        :param deletion_confirmed_via: The deletion_confirmed_via of this DeletedUserSiteCreate.
        :type deletion_confirmed_via: str
        """

        self._deletion_confirmed_via = deletion_confirmed_via
